[{"content":"linux配置文件关闭ipv6 编辑/etc/sysctl.conf文件\n1 sudo vim /etc/sysctl.conf 添加如下代码:\n1 2 3 4 5 net.ipv6.conf.all.disable_ipv6=1 net.ipv6.conf.default.disable_ipv6=1 net.ipv6.conf.lo.disable_ipv6=1 重新加载配置\n1 sudo sysctl -p linux临时关闭ipv6 查询自己的网卡名称可以使用ipconfig或者ip a,用来确认想要关闭ipv6的网卡名 临时关闭可以使用如下命令:\n1 sudo sh -c \u0026#39;echo 1 \u0026gt; /proc/sys/net/ipv6/conf/\u0026lt;interface-name\u0026gt;/disable_ipv6\u0026#39; 这里的\u0026lt;interface-name\u0026gt;指的就是之前确认的网卡名\n","date":"2023-11-22T00:00:00Z","image":"https://dmlhope.gitlab.io/p/%E5%85%B3%E9%97%ADipv6%E7%9A%84%E6%96%B9%E6%B3%95/20231122_hucf437697d3cd65bec7347056280a209a_88737_120x120_fill_box_smart1_3.png","permalink":"https://dmlhope.gitlab.io/p/%E5%85%B3%E9%97%ADipv6%E7%9A%84%E6%96%B9%E6%B3%95/","title":"关闭ipv6的方法"},{"content":"安装环境 : 1 2 sudo apt-get install dkms sudo apt-get install dh-make 文件 : hello.c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include \u0026lt;linux/kernel.h\u0026gt; #include \u0026lt;linux/init.h\u0026gt; #include \u0026lt;linux/module.h\u0026gt; static int hello_init(void) { pr_info(\u0026#34;Hello world.\\n\u0026#34;); return 0; } static void hello_exit(void) { pr_info(\u0026#34;Goodbye world.\\n\u0026#34;); } module_init(hello_init); module_exit(hello_exit); Makefile 1 2 3 4 5 6 7 8 9 ifneq ($(KERNELRELEASE),) obj-m := hello.o else KVERSION:= $(shell uname -r) all: $(MAKE) -C /lib/modules/$(KVERSION)/build M=$(PWD) modules clean: $(MAKE) -C /lib/modules/$(KVERSION)/build M=$(PWD) clean endif dkms.conf 1 2 3 4 5 PACKAGE_NAME=\u0026#34;hello\u0026#34; PACKAGE_VERSION=\u0026#34;0.1\u0026#34; BUILT_MODULE_NAME[0]=\u0026#34;hello\u0026#34; DEST_MODULE_LOCATION[0]=\u0026#34;/updates\u0026#34; AUTOINSTALL=\u0026#34;yes\u0026#34; 模块需要在 /usr/src 下建立文件夹，命名方式为 \u0026lt; 模块名称 \u0026gt;-\u0026lt; 版本号 \u0026gt;, 如 :hello-0.1\n路径 :/usr/src/hello-0.1\n1 2 3 4 . ├── dkms.conf ├── hello.c └── Makefile 命令 : dkms status 、add、build、install、uninstall 和 remove\n状态 : dkms status\n添加模块 :sudo dkms add -m hello -v 0.1\n编译驱动 :sudo dkms build -m hello -v 0.1\n安装模块 :sudo dkms install -m hello -v 0.1\n移除模块 :sudo dkms remove -m hello -v 0.1 --all\n模块打包 :sudo dkms mkdeb -m hello -v 0.1\ndeb 产出 :/var/lib/dkms/hello/0.1/deb/\n","date":"2021-08-08T00:00:00Z","image":"https://dmlhope.gitlab.io/p/dkms-%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97%E6%89%93%E5%8C%85-deb/20210808_hu69602687cd888dbd0601e81890b17cde_2497706_120x120_fill_q75_box_smart1.jpg","permalink":"https://dmlhope.gitlab.io/p/dkms-%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97%E6%89%93%E5%8C%85-deb/","title":"dkms 内核模块打包 deb"},{"content":"基础用法 1 curl + url （默认为get请求） 设定为post请求：\n1 2 3 4 5 6 curl -X -POST url curl -XPOST url curl -XPOST url -d 数据 + 例如 curl -X -POST url -d \u0026#34;{\u0026#34;title\u0026#34;:\u0026#34;...\u0026#34;}\u0026#34; curl -SPUT url -d 数据 curl -XDELETE url 将Http Header添加到请求里\n1 2 curl URL -H 首部 -H 第二个首部 ... + 例如： curl -X -POST url -H \u0026#39;Cotent-Type:application/json\u0026#39; -d \u0026#34;{\u0026#34;title\u0026#34;:\u0026#34;...\u0026#34;}\u0026#34; 获取所有首部\n1 curl -I URL 下载\n1 2 3 4 curl -O URL curl -o 文件名 URL curl --limit-rate 100k(限速大小) -o 文件名 URL curl -C - -o 上一次的文件名 URL (实现断点续传) 跟随重定向\n1 2 curl -L URL curl -v -L URL (显示详细信息) 使用代理\n1 curl --proxy 协议://用户名:密码@ip地址:端口 URL ","date":"2021-07-07T00:00:00Z","image":"https://dmlhope.gitlab.io/p/curl-%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/20210707_hua7f36cdd4e8bd6f5e47d77e4a26f3444_1809632_120x120_fill_box_smart1_3.png","permalink":"https://dmlhope.gitlab.io/p/curl-%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/","title":"curl 命令使用"}]